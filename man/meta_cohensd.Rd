% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/meta_cohensd.R
\name{meta_cohensd}
\alias{meta_cohensd}
\title{Compute Meta-Analytic Cohen's d and Hedges' g for Multiple Measurements}
\usage{
meta_cohensd(
  data,
  dataset_col = NULL,
  standard_scores_col,
  measurement_name_col,
  measurement_values_col,
  subject_id_col = NULL
)
}
\arguments{
\item{data}{A dataframe containing multiple datasets and measurement types.}

\item{dataset_col}{A string specifying the column name that identifies datasets.}

\item{standard_scores_col}{A string specifying the column name that indicates the standard_score variable (binary: 0 or 1). The direction of the difference
taken in the computation of Cohen's d is \emph{higher} minus \emph{lower} standard score.}

\item{measurement_name_col}{A string specifying the column name that identifies different measurement types.}

\item{measurement_values_col}{A string specifying the column name that contains measurement values (continuous variable).}

\item{subject_id_col}{(Optional) A string specifying the column name that identifies unique subjects.
If provided, the function determines whether each dataset is paired (within-subject) or unpaired.
Paired analysis only applies if ALL subjects have measurements for both standard_scores.}
}
\value{
A list containing:
\describe{
\item{effect_sizes}{A dataframe containing Cohen’s d and Hedges’ g for each dataset and measurement.}
\item{meta_results}{A dataframe summarizing the meta-analytic effect sizes for each measurement.}
}
}
\description{
This function calculates the meta-analytic \strong{Cohen's d} and \strong{Hedges' g}
effect sizes for multiple measurement types across different datasets.
It automatically determines whether each dataset follows a \strong{paired (within-subject)}
or \strong{unpaired (between-subject) design} based on the presence of repeated subject IDs.
Effect sizes are aggregated using inverse variance weighting. For calculations ,we referred to
Goulet-Pelletier, J. C., & Cousineau, D. (2018). A review of effect sizes and their confidence intervals, Part I: The Cohen’sd family.
The Quantitative Methods for Psychology, 14(4), 242-265.
}
\details{
\itemize{
\item If \code{subject_id_col} is \strong{not provided}, all datasets are treated as \strong{unpaired} (between-subject).
\item If \code{subject_id_col} \strong{is provided}, the function checks whether subjects appear in both standard_scores:
\itemize{
\item If a dataset contains all repeated subjects across standard_scores, it is treated as \strong{paired (within-subject)}.
\item Otherwise, it is treated as \strong{unpaired (between-subject)}.
}
\item \strong{For both paired and unpaired designs}, Cohen’s d is computed as:
\deqn{ d = \frac{\mathrm{mean_1} - \mathrm{mean_2}}{\mathrm{pooled\_sd}} }
where pooled_sd is the pooled standard deviation. This is to ensure comparability between effect sizes
coming from within and between subjects designs.
}
}
\examples{

require(dplyr)

set.seed(123)

# Function to generate a study with a better (A) measurement in terms of effect size.
generate_study <- function(study_id, n_per_group, within = TRUE) {
 df <- expand.grid(
   study_id = study_id,
   subject_id = 1:n_per_group,
   standard_score = c(0, 1),
   measurement_type = c("A", "B")
 )
 if(!within){
   df$subject_id <- 1:nrow(df)
 }
 df$measurement <- with(df, rnorm(nrow(df),
                                  mean = ifelse(measurement_type == "A",
                                  ifelse(standard_score == 1, 10, 5),
                                  ifelse(standard_score == 1, 7, 6)),
                                  sd = 5))
 return(df)
}

all_studies <- do.call(rbind, list(
 generate_study("Study1", 30, within = TRUE),
 generate_study("Study2", 30, within = TRUE),
 generate_study("Study3", 30, within = FALSE)
))

result <- meta_cohensd(
 data = all_studies, dataset_col = "study_id", standard_scores_col = "standard_score",
 measurement_name_col = "measurement_type", measurement_values_col = "measurement",
 subject_id_col = "subject_id"
)

print(result)

}
